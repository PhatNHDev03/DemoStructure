

-- Tạo bảng class trước (để làm khóa ngoại cho student)
CREATE TABLE CLASS (
    class_id SERIAL PRIMARY KEY,
    class_name VARCHAR(100) NOT NULL,
    class_code VARCHAR(20) NOT NULL UNIQUE,
    teacher_name VARCHAR(100),
    room_number VARCHAR(20),
    max_students INTEGER DEFAULT 30,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Active'
);

-- Tạo bảng system_account (phải tạo trước để làm khóa ngoại)
CREATE TABLE system_account (
    account_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    full_name VARCHAR(100),
    email VARCHAR(100),
    ROLE VARCHAR(20) DEFAULT 'User', -- Có thể là Admin, User, Teacher, v.v.
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Active'
);

-- Tạo bảng student (học sinh)
CREATE TABLE student (
    student_id SERIAL PRIMARY KEY,
    student_code VARCHAR(20) NOT NULL UNIQUE,
    full_name VARCHAR(100) NOT NULL,
    date_of_birth DATE,
    email VARCHAR(100),
    phone VARCHAR(15),
    address VARCHAR(255),
    class_id INTEGER,
    enrollment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Active',
    
    -- Tạo foreign key constraint
    CONSTRAINT FK_student_class 
        FOREIGN KEY (class_id) REFERENCES CLASS(class_id)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

-- Tạo bảng product (sản phẩm)
CREATE TABLE product (
    product_id SERIAL PRIMARY KEY,
    product_code VARCHAR(20) NOT NULL UNIQUE,
    product_name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    price DECIMAL(18,2) NOT NULL,
    unit VARCHAR(20) DEFAULT 'Cái',
    category VARCHAR(50),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Active'
);

-- Tạo bảng inventoryProduct (kho sản phẩm)
CREATE TABLE inventoryProduct (
    inventory_id SERIAL PRIMARY KEY,
    product_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL DEFAULT 0,
    system_account_id INTEGER,
    warehouse_location VARCHAR(50),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    notes VARCHAR(255),
    
    -- Tạo foreign key constraints
    CONSTRAINT FK_inventory_product 
        FOREIGN KEY (product_id) REFERENCES product(product_id)
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    
    CONSTRAINT FK_inventory_account 
        FOREIGN KEY (system_account_id) REFERENCES system_account(account_id)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

-- Tạo bảng transaction (giao dịch kho)
CREATE TABLE transaction_table (
    transaction_id SERIAL PRIMARY KEY,
    inventory_id INTEGER NOT NULL,
    quantity INTEGER NOT NULL,
    system_account_id INTEGER,
    status VARCHAR(20) DEFAULT 'Pending', -- 'Pending', 'Completed', 'Cancelled'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Tạo foreign key constraints
    CONSTRAINT FK_transaction_inventory 
        FOREIGN KEY (inventory_id) REFERENCES inventoryProduct(inventory_id)
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    
    CONSTRAINT FK_transaction_account 
        FOREIGN KEY (system_account_id) REFERENCES system_account(account_id)
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

-- Tạo các index để tối ưu hiệu suất
CREATE INDEX IX_student_class_id ON student(class_id);
CREATE INDEX IX_student_full_name ON student(full_name);
CREATE INDEX IX_class_class_code ON CLASS(class_code);
CREATE INDEX IX_product_product_code ON product(product_code);
CREATE INDEX IX_product_product_name ON product(product_name);
CREATE INDEX IX_inventory_product_id ON inventoryProduct(product_id);
CREATE INDEX IX_inventory_account_id ON inventoryProduct(system_account_id);
CREATE INDEX IX_transaction_inventory_id ON transaction_table(inventory_id);
CREATE INDEX IX_transaction_account_id ON transaction_table(system_account_id);
CREATE INDEX IX_transaction_status ON transaction_table(status);
CREATE INDEX IX_system_account_username ON system_account(username);
CREATE INDEX IX_system_account_role ON system_account(ROLE);

-- Chèn dữ liệu mẫu cho bảng class (phải chèn trước để làm khóa ngoại)
INSERT INTO CLASS (class_name, class_code, teacher_name, room_number, max_students) 
VALUES 
    ('Lớp 10A1', '10A1', 'Nguyễn Văn An', 'A101', 35),
    ('Lớp 10A2', '10A2', 'Trần Thị Bình', 'A102', 35),
    ('Lớp 11B1', '11B1', 'Lê Văn Cường', 'B201', 30),
    ('Lớp 12C1', '12C1', 'Phạm Thị Dung', 'C301', 32);

-- Chèn dữ liệu mẫu cho bảng system_account (phải chèn trước để làm khóa ngoại)
INSERT INTO system_account (username, password_hash, full_name, email, ROLE)
VALUES 
    ('admin', 'AQAAAAIAAYagAAAAEM5lC8HdvSkZQ+Z06253tIF9vAgjaw++yNQgPymq+grQck3WnfUsyOOAvOTRQK9ZOw==', 'Quản trị viên', 'admin@email.com', 'Admin'),
    ('teacher01', 'AQAAAAIAAYagAAAAEM5lC8HdvSkZQ+Z06253tIF9vAgjaw++yNQgPymq+grQck3WnfUsyOOAvOTRQK9ZOw==', 'Nguyễn Văn An', 'an.nv@email.com', 'Teacher'),
    ('user01', 'AQAAAAIAAYagAAAAEM5lC8HdvSkZQ+Z06253tIF9vAgjaw++yNQgPymq+grQck3WnfUsyOOAvOTRQK9ZOw==', 'Nguyễn Văn User', 'user01@email.com', 'User'),
    ('manager01', 'AQAAAAIAAYagAAAAEM5lC8HdvSkZQ+Z06253tIF9vAgjaw++yNQgPymq+grQck3WnfUsyOOAvOTRQK9ZOw==', 'Trần Thị Manager', 'manager01@email.com', 'Manager');

-- Chèn dữ liệu mẫu cho bảng student
INSERT INTO student (student_code, full_name, date_of_birth, email, phone, address, class_id) 
VALUES 
    ('SV001', 'Nguyễn Văn Hùng', '2008-05-15', 'hung.nv@email.com', '0123456789', '123 Đường ABC, Quận 1, TP.HCM', 1),
    ('SV002', 'Trần Thị Lan', '2008-08-20', 'lan.tt@email.com', '0123456790', '456 Đường DEF, Quận 2, TP.HCM', 1),
    ('SV003', 'Lê Văn Minh', '2008-03-10', 'minh.lv@email.com', '0123456791', '789 Đường GHI, Quận 3, TP.HCM', 1),
    ('SV004', 'Phạm Thị Nga', '2007-12-25', 'nga.pt@email.com', '0123456792', '321 Đường JKL, Quận 4, TP.HCM', 2),
    ('SV005', 'Hoàng Văn Phong', '2007-07-18', 'phong.hv@email.com', '0123456793', '654 Đường MNO, Quận 5, TP.HCM', 2),
    ('SV006', 'Vũ Thị Quỳnh', '2006-11-30', 'quynh.vt@email.com', '0123456794', '987 Đường PQR, Quận 6, TP.HCM', 3),
    ('SV007', 'Đỗ Văn Sơn', '2005-09-05', 'son.dv@email.com', '0123456795', '147 Đường STU, Quận 7, TP.HCM', 4);

-- Chèn dữ liệu mẫu cho bảng product
INSERT INTO product (product_code, product_name, description, price, unit, category) 
VALUES 
    ('PRD001', 'Bút bi xanh', 'Bút bi màu xanh, chất lượng cao', 5000.00, 'Cái', 'Văn phòng phẩm'),
    ('PRD002', 'Sổ tay A5', 'Sổ tay kích thước A5, 200 trang', 25000.00, 'Cuốn', 'Văn phòng phẩm'),
    ('PRD003', 'Thước kẻ 30cm', 'Thước kẻ nhựa trong suốt 30cm', 8000.00, 'Cái', 'Dụng cụ học tập'),
    ('PRD004', 'Máy tính Casio', 'Máy tính khoa học Casio FX-580VN', 350000.00, 'Cái', 'Thiết bị điện tử'),
    ('PRD005', 'Bộ compas', 'Bộ dụng cụ vẽ hình học đầy đủ', 45000.00, 'Bộ', 'Dụng cụ học tập'),
    ('PRD006', 'Bút chì 2B', 'Bút chì gỗ 2B, hộp 12 cái', 15000.00, 'Hộp', 'Văn phòng phẩm'),
    ('PRD007', 'Tẩy trắng', 'Tẩy trắng cao su, không độc hại', 3000.00, 'Cái', 'Văn phòng phẩm'),
    ('PRD008', 'Keo dán UHU', 'Keo dán đa năng 40ml', 12000.00, 'Tuýp', 'Văn phòng phẩm');

-- Chèn dữ liệu mẫu cho bảng inventoryProduct
INSERT INTO inventoryProduct (product_id, quantity, system_account_id, warehouse_location, notes) 
VALUES 
    (1, 500, 1, 'Kho A - Kệ 1', 'Hàng mới nhập'),
    (2, 200, 1, 'Kho A - Kệ 2', 'Còn đủ hàng'),
    (3, 150, 2, 'Kho B - Kệ 1', 'Cần bổ sung'),
    (4, 50, 2, 'Kho B - Kệ 3', 'Hàng cao cấp'),
    (5, 80, 1, 'Kho A - Kệ 3', 'Hàng bán chạy'),
    (6, 300, 3, 'Kho C - Kệ 1', 'Hàng học sinh dùng nhiều'),
    (7, 400, 3, 'Kho C - Kệ 2', 'Hàng giá rẻ'),
    (8, 120, 4, 'Kho D - Kệ 1', 'Hàng chất lượng tốt');

-- Chèn dữ liệu mẫu cho bảng transaction
INSERT INTO transaction_table (inventory_id, quantity, system_account_id, status) 
VALUES 
    (1, 100, 1, 'Completed'),
    (2, -20, 2, 'Completed'),
    (3, 50, 1, 'Completed'),
    (4, -5, 2, 'Pending'),
    (5, -2, 1, 'Completed'),
    (6, 200, 3, 'Completed'),
    (7, -50, 3, 'Completed'),
    (8, 80, 4, 'Pending');